<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <style>
        * {
            margin: 0;
            font-family: "Rubik", sans-serif;
            text-align: center;
        }

        #frame {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);

            width: clamp(300px, 70%, 1440px);
            height: 80%;
            overflow: scroll;

            background: hsl(228, 33%, 97%);
            box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);

            padding-bottom: 15px;
        }

        #header {
            width: 100%;
            height: clamp(10px, 15%, 800px);
            position: relative;
            background: #519b9b;
        }
        #svg-container {
            position: absolute;
            top: 0;
            bottom: 0;
            overflow: hidden;
            width: 100%;
        }

        #filter-bar {
            position: absolute;
            left: 50%;
            bottom: 0;
            transform: translate(-50%, 50%);
            width: clamp(100px, 80%, 1000px);
            height: 60px;
            background: white;
            box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.3);
            border-radius: 5px;
        }

        #job-container {
            width: clamp(100px, 80%, 1000px);
            margin: 0 auto;
            margin-top: 70px;
            height: fit-content;
            display: flex;
            flex-direction: column;
            justify-content: center;
            gap: 30px;
        }

        #job {
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: white;
            border-radius: 10px;
            padding: 10px 15px 30px;
            box-sizing: border-box;
            box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.3);
        }
        #job > div:nth-child(1) > div {
            display: inline-block;
        }
        .job-image {
            width: 70px;
            height: 70px;
            background: hsl(211, 10%, 45%);
            border-radius: 50%;
        }
        .job-info {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align:left;
        }
        .job-info > div {
            margin-top: 7px;
        }
        .job-tag {
            display: flex;
            justify-content:flex-end;
            align-items: center;
            gap: 10px;
        }
        .job-tag > div {
            color: #519b9b;
            background: hsl(223, 19%, 93%);
            height: fit-content;
            width: fit-content;
            padding: 5px;
            border-radius: 5px;
            font-size: 12px;
            font-weight: 500;
        }
        .job-tag > div:hover {
            color: hsl(223, 19%, 93%);
            background: #519b9b;
            cursor: pointer;
        }
        .additional {
            display: flex;
            justify-content: space-between;
            gap: 10px;
        }

        .new, .featured {
            height: fit-content;
            width: fit-content;
            border-radius: 10px;
            color: white;
            background: #519b9b;
            font-size: 12px;
            font-weight: 500;
            padding: 5px;
        }
        .featured {
            background: black;
        }

        .company {
            font-size: 13px;
            font-weight: 700;
            color: #519b9b;
        }

        .job-name {
            text-align: left;
            font-size: 18px;
            font-weight: 500;
        }
        .job-name:hover {
            cursor: pointer;
            color: #519b9b;
        }

        .additional > span {
            font-size: 15px;
            color: hsl(239, 57%, 85%);
        }

        #filter-bar {
            display: flex;
            justify-content: start;
            align-items: center;
        }
        #filter-bar > div {
            color: hsl(180, 29%, 50%);
            background: hsl(180, 31%, 95%);
            font-size: 12px;
            font-weight: 700;
            padding: 5px;
            position:relative;
            margin: 0 20px;
        }
        #filter-bar > div::after {
            content: 'X';
            display: flex;
            align-items: center;
            justify-content: center;
            position: absolute;
            right: 0;
            top: 0;
            transform: translate(100%, 0);
            height: 100%;
            aspect-ratio: 1/1;
            color: white;
            background-color: hsl(180, 29%, 50%);
            border-radius: 0 5px 5px 0;
        }
        #filter-bar > div:hover::after {
            cursor: pointer;
            background: rgba(0, 0, 0, 0.8);
        }

        #job[ok] {
            border-left: 5px solid #519b9b;
        }
    </style>
</head>
<body>
    <div id="frame">
        <div id="header">
            <div id="svg-container">
                <svg viewBox="0 0 1440 156" width="1440" height="156" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="a" d="M0 0h1440v156H0z"/></defs><g fill="none" fill-rule="evenodd"><mask id="b" fill="#fff"><use xlink:href="#a"/></mask><use xlink:href="#a"/><g mask="url(#b)" fill="#63BABA"><path d="M495.73 563.419c-51.439-48.795-53.583-130.05-4.788-181.489a128.377 128.377 0 0 1 4.789-4.789l418.16-396.66c55.045-52.215 141.329-52.215 196.374 0 50.418 47.825 53.478 126.835 7.634 178.39l188.06-178.39c55.045-52.215 141.328-52.215 196.373 0 51.44 48.794 53.583 130.049 4.789 181.488a128.377 128.377 0 0 1-4.789 4.789l-418.158 396.658c-55.045 52.215-141.329 52.215-196.374 0-50.418-47.825-53.478-126.835-7.634-178.39L692.104 563.42c-55.045 52.215-141.328 52.215-196.373 0ZM360.464 45.523c-51.44-48.794-53.583-130.05-4.789-181.488a128.377 128.377 0 0 1 4.789-4.79l418.163-396.663c55.046-52.215 141.33-52.215 196.374 0 51.44 48.794 53.583 130.05 4.789 181.488a128.376 128.376 0 0 1-4.789 4.79L556.837 45.522c-55.045 52.215-141.328 52.215-196.373 0Zm-468.795 71.832c-51.439-48.795-53.583-130.05-4.789-181.489a128.377 128.377 0 0 1 4.79-4.788l418.16-396.661c55.045-52.215 141.328-52.215 196.373 0 51.44 48.794 53.583 130.05 4.79 181.488a128.378 128.378 0 0 1-4.79 4.789l-418.16 396.66c-55.045 52.216-141.329 52.216-196.374 0Z"/></g></g></svg>
            </div>
            <div id="filter-bar"></div>
        </div>
        <div id="job-container"></div>
    </div>

    <script>
        const filterBox = document.getElementById('filter-bar');
        const jobBox = document.getElementById('job-container');
        var curFilter = { 'role': [], 'level': [], 'lang': [], 'tool': [] };

        function filt(e) {
            for(property in curFilter) {
                var p = property;
                if(p === 'lang') p = 'languages';
                if(p === 'tool') p = 'tools';
                var flag = true;
                curFilter[property].forEach(a => {
                    if(property === 'role' || property === 'level') {
                        if(a != e[p]) {
                            flag = false;
                        }
                    }
                    else {
                        if(e[p].find(tmp => tmp === a) === undefined) {
                            flag = false;
                        }
                    }
                });
                if(!flag) {
                    return false;
                }
             }
            return true;
        }

        function addFilter(a) {
            console.log('add query', a.className, a.innerText);
            if(curFilter[a.className].find(e => e == a.innerText) === undefined) {
                console.log('not found so add');
                curFilter[a.className].push(a.innerText);
                showData();
            }
        }
        function deleteFilter(a) {
            console.log('delete query', a.className, a.innerText);
            curFilter[a.className].splice(curFilter[a.className].indexOf(a.innerText), 1);
            showData();
        }

        const data = JSON.parse('<%= JSON.stringify(jobs) %>'.replaceAll('&#34;', '"'));

        function showData() {
            filterBox.innerHTML = '';
            for(type in curFilter) {
                curFilter[type].forEach(e => {
                    filterBox.innerHTML += `
                        <div class="${type}" onclick="deleteFilter(this)">${e}</div>
                    `;
                });
            }

            var ok='', notok = '';
            data.forEach(e => {
                const langStr = () => {
                    var str = '';
                    e.languages.forEach(lang => {
                        str += `<div class="lang" onclick="addFilter(this)">${lang}</div>`;
                    });
                    return str;
                };
                const toolStr = () => {
                    var str = '';
                    e.tools.forEach(tool => {
                        str = `${str} <div class="tool" onclick="addFilter(this)">${tool}</div>`;
                    });
                    return str;
                };

                const str = `
                    <div id="job" ${filt(e) ? 'ok' : ''} role="${e.role}" level="${e.level}"
                        languages="${e.languages}"
                        tools="${e.tools}">
                        <div style="display: flex; gap: 10px; align-items: center; justify-content: flex-start;">
                            <div class="job-image"></div>
                            <div class="job-info">
                                <div style="display: flex; gap: 10px; align-items: center;">
                                    <div class="company">${e.company}</div>
                                    ${e.new ? '<div class="new">NEW!</div>' : ''}
                                    ${e.featured ? '<div class="featured">FEATURED</div>' : ''}
                                </div>
                                <div class="job-name">${e.position}</div>
                                <div class="additional"><span>1d ago</span> <span>&#x2022;</span>
                                    <span>Full time</span> <span>&#x2022;</span> <span>USA only</span></div>
                            </div>
                        </div>
                        <div class="job-tag">
                            <div class="role" onclick="addFilter(this)">${e.role}</div>
                            <div class="level" onclick="addFilter(this)">${e.level}</div>
                            ${langStr()}
                            ${toolStr()}
                        </div>
                    </div>
                `;

                console.log(filt(e));
                if(filt(e)) {
                    ok += str;
                }
                else {
                    notok += str;
                }
            });
            jobBox.innerHTML = `${ok} ${notok}`;
        }

        showData();
    </script>
</body>
</html>
